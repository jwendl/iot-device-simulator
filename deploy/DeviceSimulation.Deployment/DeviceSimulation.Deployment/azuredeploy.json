{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only."
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "clusterProtectionLevel": {
      "type": "string",
      "allowedValues": [
        "None",
        "Sign",
        "EncryptAndSign"
      ],
      "defaultValue": "None",
      "metadata": {
        "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
      }
    },
    "clusterReliabilityLevel": {
      "type": "string",
      "defaultValue": "Silver",
      "allowedValues": [
        "Silver",
        "Platinum"
      ],
      "metadata": {
        "description": "Reliability level for the Service Fabric cluster."
      }
    },
    "clusterInstanceCount": {
      "type": "int",
      "defaultValue": "5",
      "metadata": {
        "description": "Instance count for node type"
      }
    },
    "clusterNodeSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_E8s_v3"
      ]
    },
    "omsWorkspaceName": {
      "type": "string",
      "defaultValue": "sfomsworkspace",
      "metadata": {
        "description": "Name of your OMS Log Analytics Workspace"
      }
    },
    "omsRegion": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "West Europe",
        "East US",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "Specify the Azure Region for your OMS workspace"
      }
    },
    "iotHubName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Name of the IoT Hub instance to provision."
      }
    },
    "iotHubSkuName": {
      "type": "string",
      "allowedValues": [
        "F1",
        "S1",
        "S2",
        "S3"
      ],
      "defaultValue": "F1",
      "metadata": {
        "description": "One of the supported SKUs: F1, S1 or S2"
      }
    },
    "iotHubCapacityUnits": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "metadata": {
        "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
      }
    }
  },
  "variables": {
    "clusterLocation": "[resourceGroup().location]",
    "computeLocation": "[resourceGroup().location]",
    "iotHubLocation": "[resourceGroup().location]",
    "appInsightsLocation": "eastus",
    "dnsName": "[parameters('clusterName')]",
    "vmName": "vm",
    "publicIPAddressName": "PublicIP-VM",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "virtualNetworkName": "VNet",
    "addressPrefix": "10.0.0.0/16",
    "nicName": "NIC",
    "lbName": "LoadBalancer",
    "lbIPName": "PublicIP-LB-FE",
    "availSetName": "AvailabilitySet",
    "maxPercentUpgradeDomainDeltaUnhealthyNodes": "100",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "applicationDiagnosticsStorageAccountType": "Standard_LRS",
    "applicationDiagnosticsStorageAccountName": "[toLower(concat('oms', uniqueString(resourceGroup().id), '3' ))]",
    "overProvision": "false",
    "nt0applicationStartPort": "20000",
    "nt0applicationEndPort": "30000",
    "nt0ephemeralStartPort": "49152",
    "nt0ephemeralEndPort": "65534",
    "nt0fabricTcpGatewayPort": "19000",
    "nt0fabricHttpGatewayPort": "19080",
    "nt0fabricWebAppPort": "8690",
    "subnet0Name": "Subnet-0",
    "subnet0Prefix": "10.0.0.0/24",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers',concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "lbWebProbeID0": "[concat(variables('lbID0'),'/probes/FabricManagerProbe')]",
    "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmNodeType0Name": "[toLower(concat('NT1', variables('vmName')))]",
    "vmNodeType0Size": "[parameters('clusterNodeSize')]",
    "vmPublisher": "MicrosoftWindowsServer",
    "vmOffer": "WindowsServer",
    "vmSku": "2016-Datacenter-with-Containers",
    "autoScaleSettingsName": "[concat(variables('vmNodeType0Name'), 'AutoScaleSettings')]",
    "d2cMessageRetentionInDaysPeriod": "1",
    "d2cPartitionCount": "2",
    "c2dMessagesTTLAsIso8601": "PT1H",
    "c2dMessagesMaxDeliveryCount": "10",
    "c2dFeebackMessagesTTLAsIso8601": "PT1H",
    "c2dFeedbackMessagesMaxDeliveryCount": "10",
    "c2dFeedbackMessagesLockDurationAsIso8601": "PT60S",
    "d2cConsumerGroupName": "cg1",

    "solution": "[Concat('ServiceFabric', '(', parameters('omsWorkspacename'), ')')]",
    "solutionName": "ServiceFabric"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {
      },
      "tags": {
        "displayName": "Storage Account"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {},
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[concat(parameters('clusterName'), 'appinsights')]",
      "type": "Microsoft.Insights/components",
      "location": "[variables('appInsightsLocation')]",
      "properties": {
        "Application_Type": "web"
      },
      "tags": {
        "displayName": "Application Insights"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('computeLocation')]",
      "comments": "The virtual network that service fabric will use.",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet0Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet0Prefix')]"
            }
          }
        ]
      },
      "tags": {
        "displayName": "Virtual Network",
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('lbIPName'),'-','0')]",
      "location": "[variables('computeLocation')]",
      "comments": "The public ip address that service fabric will use.",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsName')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "displayName": "Public IP Addresses",
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name'))]",
      "location": "[variables('computeLocation')]",
      "comments": "Load balancer for the service fabric cluster.",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','0'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','0'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricManager",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricWebAppPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricWebAppPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbWebProbeID0')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricManagerProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricWebAppPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPortRangeEnd": 4500,
              "frontendPortRangeStart": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "tags": {
        "displayName": "Load Balancers",
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmNodeType0Name')]",
      "location": "[variables('computeLocation')]",
      "comments": "VM Scale Set definition for the cluster.",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]"
      ],
      "properties": {
        "overprovision": "[variables('overProvision')]",
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat('ServiceFabricNodeVmExt','_vmNodeType0Name')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('vmNodeType0Name')]",
                    "dataPath": "D:\\\\SvcFab",
                    "durabilityLevel": "Bronze",
                    "nicPrefixOverride": "[variables('subnet0Prefix')]"
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "sinks": "applicationInsights",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        },
                        "PerformanceCounters": {
                          "scheduledTransferPeriod": "PT1M",
                          "PerformanceCounterConfiguration": [
                            {
                              "counterSpecifier": "\\Processor(_Total)\\% Processor Time",
                              "sampleRate": "PT1M",
                              "unit": "Percent",
                              "annotation": [
                              ],
                              "sinks": ""
                            },
                            {
                              "counterSpecifier": "\\Memory\\Available Bytes",
                              "sampleRate": "PT1M",
                              "unit": "Bytes",
                              "annotation": [
                              ],
                              "sinks": ""
                            },
                            {
                              "counterSpecifier": "\\Memory\\PercentAvailableMemory",
                              "sampleRate": "PT1M",
                              "unit": "Percent",
                              "annotation": [
                              ],
                              "sinks": ""
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Actor Method(*)\\Invocations/Sec",
                              "sampleRate": "PT1M"
                            }
                          ]
                        },
                        "SinksConfig": {
                          "Sink": [
                            {
                              "name": "applicationInsights",
                              "ApplicationInsights": "642c7b14-039a-46ef-a467-131a561069d7"
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-0')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-',0)]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID0')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('lbNatPoolID0')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnet0Ref')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "[variables('vmNodeType0Name')]",
            "secrets": []
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('vmPublisher')]",
              "offer": "[variables('vmOffer')]",
              "sku": "[variables('vmSku')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          }
        }
      },
      "sku": {
        "name": "[variables('vmNodeType0Size')]",
        "capacity": "[parameters('clusterInstanceCount')]",
        "tier": "Standard"
      },
      "tags": {
        "displayName": "Virtual Machine Scale Sets",
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-07-01-preview",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[parameters('clusterName')]",
      "location": "[variables('clusterLocation')]",
      "comments": "Service Fabric cluster instance.",
      "dependsOn": [],
      "properties": {
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": [],
        "clusterState": "Default",
        "fabricSettings": [],
        "addonFeatures": [
          "DnsService"
        ],
        "managementEndpoint": "[concat('http://',reference(concat(variables('lbIPName'),'-','0')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[variables('vmNodeType0Name')]",
            "applicationPorts": {
              "endPort": "[variables('nt0applicationEndPort')]",
              "startPort": "[variables('nt0applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "Bronze",
            "ephemeralPorts": {
              "endPort": "[variables('nt0ephemeralEndPort')]",
              "startPort": "[variables('nt0ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
            "isPrimary": "true",
            "vmInstanceCount": "[parameters('clusterInstanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "[parameters('clusterReliabilityLevel')]",
        "upgradeMode": "Automatic",
        "vmImage": "Windows"
      },
      "tags": {
        "displayName": "Service Fabric Cluster",
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('omsRegion')]",
      "name": "[parameters('omsWorkspaceName')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "properties": {
        "sku": {
          "name": "Free"
        }
      },
      "resources": [
        {
          "apiVersion": "2015-11-01-preview",
          "name": "[concat(variables('applicationDiagnosticsStorageAccountName'), parameters('omsWorkspaceName'))]",
          "type": "storageinsightconfigs",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspacename'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
          ],
          "properties": {
            "containers": [],
            "tables": [
              "WADServiceFabric*EventTable",
              "WADWindowsEventLogsTable",
              "WADETWEventTable"
            ],
            "storageAccount": {
              "id": "[resourceId('Microsoft.Storage/storageaccounts/', variables('applicationDiagnosticsStorageAccountName'))]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-06-15').key1]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('omsRegion')]",
      "name": "[variables('solution')]",
      "type": "Microsoft.OperationsManagement/solutions",
      "id": "[resourceId('Microsoft.OperationsManagement/solutions/', variables('solution'))]",
      "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('OMSWorkspacename'))]"
      ],
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspacename'))]"
      },
      "plan": {
        "name": "[variables('solution')]",
        "publisher": "Microsoft",
        "product": "[Concat('OMSGallery/', variables('solutionName'))]",
        "promotionCode": ""
      }
    },
    {
      "apiVersion": "2016-02-03",
      "location": "[variables('iotHubLocation')]",
      "name": "[parameters('iotHubName')]",
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": "[variables('d2cPartitionCount')]",
            "partitionIds": [
              "0",
              "1"
            ]
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 1,
            "partitionCount": "[variables('d2cPartitionCount')]",
            "partitionIds": [
              "0",
              "1"
            ]
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "eventHubs": []
          },
          "routes": [],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": [
              "events"
            ],
            "isEnabled": true
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "",
            "containerName": ""
          }
        },
        "cloudToDevice": {
          "defaultTtlAsIso8601": "[variables('c2dMessagesTTLAsIso8601')]",
          "maxDeliveryCount": "[variables('c2dMessagesMaxDeliveryCount')]",
          "feedback": {
            "maxDeliveryCount": "[variables('c2dFeedbackMessagesMaxDeliveryCount')]",
            "ttlAsIso8601": "[variables('c2dFeebackMessagesTTLAsIso8601')]",
            "lockDurationAsIso8601": "[variables('c2dFeedbackMessagesLockDurationAsIso8601')]"
          },
          "operationsMonitoringProperties": {
            "events": {
              "None": "None",
              "Connections": "None",
              "DeviceTelemetry": "None",
              "C2DCommands": "None",
              "DeviceIdentityOperations": "None",
              "FileUploadOperations": "None"
            }
          }
        },
        "location": "[resourceGroup().location]"
      },
      "sku": {
        "name": "[parameters('iotHubSkuName')]",
        "capacity": "[parameters('iotHubCapacityUnits')]"
      },
      "type": "Microsoft.Devices/iotHubs"
    },
    {
      "apiVersion": "2016-02-03",
      "type": "Microsoft.Devices/IotHubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('iotHubName'), '/events/cg2')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
      ]
    },
    {
      "apiVersion": "2016-02-03",
      "dependsOn": [
        "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
      ],
      "name": "[concat(parameters('iotHubName'), '/events/', variables('d2cConsumerGroupName'))]",
      "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups"
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbIPName'),'-','0')), '2016-10-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "ipaddress": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbIPName'),'-','0')), '2016-10-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "iotHubKeys": {
      "value": "[listKeys(resourceId('Microsoft.Devices/iotHubs', parameters('iotHubName')), '2016-02-03')]",
      "type": "object"
    }
  }
}